public class Main {
     public static void main(String[] args) {
        int[][] graph=new int[][]{{0,Integer.MAX_VALUE,10,Integer.MAX_VALUE,30,100},
                                  {Integer.MAX_VALUE,0,5,Integer.MAX_VALUE,Integer.MAX_VALUE,Integer.MAX_VALUE},
                                  {Integer.MAX_VALUE,Integer.MAX_VALUE,0,50,Integer.MAX_VALUE,Integer.MAX_VALUE},
                                  {Integer.MAX_VALUE,Integer.MAX_VALUE,Integer.MAX_VALUE,0,Integer.MAX_VALUE,10},
                                  {Integer.MAX_VALUE,Integer.MAX_VALUE,Integer.MAX_VALUE,20,0,60},
                                  {Integer.MAX_VALUE,Integer.MAX_VALUE,Integer.MAX_VALUE,Integer.MAX_VALUE,Integer.MAX_VALUE,0}};
        int[] dis=new int[6];
        boolean[] visited=new boolean[6];
        visited[0]=true;
        for(int i=0;i<6;i++)
            dis[i]=graph[0][i];
        dijkstra(graph, dis, visited);
        for(int i=0;i<dis.length;i++)
            System.out.print(dis[i]+" ");
    }
     public static void  dijkstra(int[][] graph,int[] dis,boolean[] visited){
         while(true){
             int min=Integer.MAX_VALUE;
             int index=-1;
             for(int i=0;i<dis.length;i++){
                 if(visited[i])
                     continue;
                 else{
                     if(dis[i]<min){
                         index=i;
                         min=dis[i];
                     }
                 }
             }
             if(index==-1) break;
             visited[index]=true;
             for(int i=0;i<graph.length;i++){
                 if(graph[index][i]!=Integer.MAX_VALUE){
                     dis[i]=dis[i]<(min+graph[index][i])?dis[i]:min+graph[index][i];
                 }
             }
         }
     }
}
